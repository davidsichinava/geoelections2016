PropData$MID<-as.numeric(PropData$MID)
PropData$DID<-as.numeric(PropData$DID)
PropData$PID<-as.numeric(PropData$PID)
PropData$Precid<-PropData$MID*100000+PropData$DID*1000+PropData$PID
PropData<-PropData[,]
names(PropData)<-c("PrecinctID", "MID", "DID", "PID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol", "PrecID")
write.csv(PropData, "PropData.csv")
## Load necessary libraries
library(tidyr)
library(XML)
library(rvest)
library(plyr)
library(dplyr)
library(httr)
library(zoo)
library(gdata)
library(qpcR)
library(data.table)
library(stringr)
library(foreach)
library(curl)
library(purrr)
setwd("D:\\Dropbox\\My Projects\\Elections\\Geogia 2016 Parliamentary\\github\\geoelections2016")
## Scrape precinct-level Proportional results
## Get URLs for each majoritarian district
mURL<-"http://results.cec.gov.ge/proporciuli.html" # Assign master page url
url <- html_session(mURL) # Get master page
urls <- url %>% # feed `main.page` to the next step
html_nodes("a") %>% # get the CSS nodes
html_attr("href") # extract the URLs
dfURL <- data.frame(urls = urls, stringsAsFactors = FALSE)
## Subset those districts which have data
dfURL<-as.data.frame(dfURL[grep("*olq*", dfURL$urls), ])
names(dfURL)<-c("urls")
## Loop thourgh URLs and get data tables for each majoritarian district
## Create an empty data frame for pasting precinct level results
PropData <- as.data.frame(setNames(replicate(27,numeric(0), simplify = F), letters[1:27]))
for(i in 1:nrow(dfURL)) {
propRaw <- GET(paste0("http://results.cec.gov.ge/", (dfURL$urls[i]), sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
propRaw<-as.data.frame(propRaw)
PropData<-na.omit(rbind(PropData, propRaw))
}
names(PropData)<-c("PrecinctID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol")
## Construct proper IDs for precincts
PropData<-PropData %>% separate(PrecinctID, c("MID", "DID", "PID"), sep = "\\.", remove=FALSE)
PropData$MID<-as.numeric(PropData$MID)
PropData$DID<-as.numeric(PropData$DID)
PropData$PID<-as.numeric(PropData$PID)
PropData$Precid<-PropData$MID*100000+PropData$DID*1000+PropData$PID
PropData<-PropData[,]
names(PropData)<-c("PrecinctID", "MID", "DID", "PID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol", "PrecID")
write.csv(PropData, "PropData.csv")
## Load necessary libraries
library(tidyr)
library(XML)
library(rvest)
library(plyr)
library(dplyr)
library(httr)
library(zoo)
library(gdata)
library(qpcR)
library(data.table)
library(stringr)
library(foreach)
library(curl)
library(purrr)
setwd("D:\\Dropbox\\My Projects\\Elections\\Geogia 2016 Parliamentary\\github\\geoelections2016")
## Scrape precinct-level Proportional results
## Get URLs for each majoritarian district
mURL<-"http://results.cec.gov.ge/proporciuli.html" # Assign master page url
url <- html_session(mURL) # Get master page
urls <- url %>% # feed `main.page` to the next step
html_nodes("a") %>% # get the CSS nodes
html_attr("href") # extract the URLs
dfURL <- data.frame(urls = urls, stringsAsFactors = FALSE)
## Subset those districts which have data
dfURL<-as.data.frame(dfURL[grep("*olq*", dfURL$urls), ])
names(dfURL)<-c("urls")
## Loop thourgh URLs and get data tables for each majoritarian district
## Create an empty data frame for pasting precinct level results
PropData <- as.data.frame(setNames(replicate(27,numeric(0), simplify = F), letters[1:27]))
for(i in 1:nrow(dfURL)) {
propRaw <- GET(paste0("http://results.cec.gov.ge/", (dfURL$urls[i]), sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
propRaw<-as.data.frame(propRaw)
PropData<-na.omit(rbind(PropData, propRaw))
}
names(PropData)<-c("PrecinctID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol")
## Construct proper IDs for precincts
PropData<-PropData %>% separate(PrecinctID, c("MID", "DID", "PID"), sep = "\\.", remove=FALSE)
PropData$MID<-as.numeric(PropData$MID)
PropData$DID<-as.numeric(PropData$DID)
PropData$PID<-as.numeric(PropData$PID)
PropData$Precid<-PropData$MID*100000+PropData$DID*1000+PropData$PID
PropData<-PropData[,]
names(PropData)<-c("PrecinctID", "MID", "DID", "PID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol", "PrecID")
write.csv(PropData, "PropData.csv")
for(i in seq_along(1:2)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes("a") %>% # get the CSS nodes
html_attr("href") # extract the URLs
majRaw<-as.data.frame(majRaw)
##  MajData<-na.omit(rbind(PropData, propRaw))
}
View(majRaw)
for(i in seq_along(1:2)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes("a") %>% # get the CSS nodes
html_attr("kand") # extract the URLs
majRaw<-as.data.frame(majRaw)
}
View(majRaw)
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=FALSE)
}
for(i in seq_along(1:2)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=FALSE)
}
majRaw<-as.data.frame(majRaw)
View(majRaw)
b<-majRaw[,ncol(majRaw)]
majRaw<-majRaw[, -c(majRaw[,ncol(majRaw)])]
majRaw<-majRaw[, -c(b)]
Data <- subset( Data, select = -c(majRaw[,ncol(majRaw)] )
)
Data <- subset( majRaw, select = -c(majRaw[,ncol(majRaw)]))
for(i in seq_along(1:2)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
}
majRaw<-as.data.frame(majRaw)
View(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
View(majRaw)
b<-ncol[majRaw]
b<-ncol([majRaw])
b<-ncol(majRaw)
colnames(majRaw)[b] <- "Link"
View(dfURL)
View(majRaw)
colnames(majRaw)[ncol(majRaw)] <- "Traki"
View(majRaw)
### Majoritarian districts
for(i in seq_along(1:2)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Traki"
}
View(majRaw)
mData <- as.data.frame(setNames(replicate(30,numeric(0), simplify = F), letters[1:30]))
for(i in seq_along(1:2)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Link"
mData<-bind_rows(mDAta, majRaw)
}
for(i in seq_along(1:2)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Link"
mData<-bind_rows(mData, majRaw)
}
View(majRaw)
View(mData)
mData <- as.data.frame(setNames(replicate(30,numeric(0), simplify = F), letters[1:30]))
names(mData)<-c("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X30", "X41", "X42", "X43", "X44", "Link")
for(i in seq_along(1:2)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Link"
mData<-bind_rows(mData, majRaw)
}
mData <- as.data.frame(setNames(replicate(30,numeric(0), simplify = F), letters[1:30]))
for(i in seq_along(1:2)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Link"
mData<-bind_rows(mData, majRaw)
}
View(mData)
mData <- as.data.frame(setNames(replicate(30,numeric(0), simplify = F), letters[1:30]))
for(i in seq_along(1:73)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Link"
mData<-bind_rows(mData, majRaw)
}
for(i in seq_along(1:73)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Link"
mData<-bind_rows(mData, majRaw)
}
View(mData)
a<-unique(mData)
View(a)
b<-mdata[c("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X30", "X41", "X42", "X43", "X44", "Link")]
b<-mData[c("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X30", "X41", "X42", "X43", "X44", "Link")]
b<-subset(mData, c(PrecinctID, X1, X2, X3, X4, X5, X6, X7, X8, X10, X11, X12, X14, X15, X16, X17, X18, X19, X22, X23, X25, X26, X27, X28, X30, X41, X42, X43, X44, Link))
b<-subset(mData, c(PrecinctID, X1, X2, X3, X4, X5, X6, X7, X8, X10, X11, X12, X14, X15, X16, X17, X18, X19, X22, X23, X25, X26, X27, X28, X41, X42, X43, X44, Link))
b<-subset(mData, select=c(PrecinctID, X1, X2, X3, X4, X5, X6, X7, X8, X10, X11, X12, X14, X15, X16, X17, X18, X19, X22, X23, X25, X26, X27, X28, X41, X42, X43, X44, Link))
b<-subset(mData, select=c(PrecinctID, X1, X2, X3, X4, X5, X6, X7, X8, X10, X11, X12, X14, X15, X16, X17, X18, X19, X22, X23, X25, X26, X27, X28, X41, X42, X43, X44, Link))
mData<-unique(mData)
b<-subset(mData, select=c(PrecinctID, X1, X2, X3, X4, X5, X6, X7, X8, X10, X11, X12, X14, X15, X16, X17, X18, X19, X22, X23, X25, X26, X27, X28, X41, X42, X43, X44, Link))
selc<-as.listc("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X30", "X41", "X42", "X43", "X44", "Link")
selc<-as.list("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X30", "X41", "X42", "X43", "X44", "Link")
b<-mData(selct)
b<-subset[mData(selct)]
b<-mData[mData(selct)]
b<-mData[(selct)]
selct<-as.list("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X30", "X41", "X42", "X43", "X44", "Link")
b<-mData[(selct)]
selct<-unlist("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X30", "X41", "X42", "X43", "X44", "Link")
selct<-as.character("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X30", "X41", "X42", "X43", "X44", "Link")
b<-mData[(selct)]
View(b)
View(mData)
selct<-c("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X30", "X41", "X42", "X43", "X44", "Link")
b<-mData[(selct)]
mData<-unique(mData)
b<-mData[(selct)]
selct<-c("PrecinctID", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X10", "X11", "X12", "X14", "X15", "X16", "X17", "X18", "X19", "X22", "X23", "X25", "X26", "X27", "X28", "X41", "X42", "X43", "X44", "Link")
b<-mData[(selct)]
c<-colnames(mData)
c
View(a)
d<-subset(mData,select=-c(NA..1))
View(d)
d<-subset(mData,select=-c(NA..1, a, b, c, d))
View(d)
d<-subset(mData,select=-c(a:NA..3))
View(d)
mData<-mData[,c(PrecinctID,X1,X2,X3,X4,X5,X6,X7,X8,X10,X12,X14,X15,X16,X17,X18,X19,X22,X23,X25,X26,X27,X28,X41,X42,X43,X44,Link)]
mData<-subset(mData,select=-c(a:NA..3))
View(mData)
mData<-mData[c(PrecinctID,X1,X2,X3,X4,X5,X6,X7,X8,X10,X12,X14,X15,X16,X17,X18,X19,X22,X23,X25,X26,X27,X28,X41,X42,X43,X44,Link)]
mData<-mData[c("PrecinctID","X1","X2","X3","X4","X5","X6","X7","X8","X10","X12","X14","X15","X16","X17","X18","X19","X22","X23","X25","X26","X27","X28","X41","X42","X43","X44","Link")]
View(mData)
View(PropData)
PropData$Precid<-PropData$MID*100000+PropData$DID*1000+PropData$PID
View(PropData)
View(PropData)
## Load necessary libraries
library(tidyr)
library(XML)
library(rvest)
library(plyr)
library(dplyr)
library(httr)
library(zoo)
library(gdata)
library(qpcR)
library(data.table)
library(stringr)
library(foreach)
library(curl)
library(purrr)
setwd("D:\\Dropbox\\My Projects\\Elections\\Geogia 2016 Parliamentary\\github\\geoelections2016")
## Scrape precinct-level Proportional results
## Get URLs for each majoritarian district
mURL<-"http://results.cec.gov.ge/proporciuli.html" # Assign master page url
url <- html_session(mURL) # Get master page
urls <- url %>% # feed `main.page` to the next step
html_nodes("a") %>% # get the CSS nodes
html_attr("href") # extract the URLs
dfURL <- data.frame(urls = urls, stringsAsFactors = FALSE)
## Subset those districts which have data
dfURL<-as.data.frame(dfURL[grep("*olq*", dfURL$urls), ])
names(dfURL)<-c("urls")
## Loop thourgh URLs and get data tables for each majoritarian district
## Create an empty data frame for pasting precinct level results
PropData <- as.data.frame(setNames(replicate(27,numeric(0), simplify = F), letters[1:27]))
for(i in 1:nrow(dfURL)) {
propRaw <- GET(paste0("http://results.cec.gov.ge/", (dfURL$urls[i]), sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
propRaw<-as.data.frame(propRaw)
PropData<-na.omit(rbind(PropData, propRaw))
}
names(PropData)<-c("PrecinctID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol")
## Construct proper IDs for precincts
PropData<-PropData %>% separate(PrecinctID, c("MID", "DID", "PID"), sep = "\\.", remove=FALSE)
PropData$MID<-as.numeric(PropData$MID)
PropData$DID<-as.numeric(PropData$DID)
PropData$PID<-as.numeric(PropData$PID)
PropData$Precid<-PropData$MID*100000+PropData$DID*1000+PropData$PID
names(PropData)<-c("PrecinctID", "MID", "DID", "PID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol", "PrecID")
write.csv(PropData, "PropData.csv", row.names=FALSE)
### Majoritarian districts
mData <- as.data.frame(setNames(replicate(30,numeric(0), simplify = F), letters[1:30]))
for(i in seq_along(1:73)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Protocol"
mData<-bind_rows(mData, majRaw)
}
## Remove duplicates
mData<-unique(mData)
## Subset columns with data
mData<-subset(mData,select=-c(a:NA..3))
## Reorder columns
mData<-mData[c("PrecinctID","X1","X2","X3","X4","X5","X6","X7","X8","X10","X12","X14","X15","X16","X17","X18","X19","X22","X23","X25","X26","X27","X28","X41","X42","X43","X44","Protocol")]
write.csv(mData, "mdata.csv", row.names=FALSE)
mData<-mData %>% separate(PrecinctID, c("MID", "DID", "PID"), sep = "\\.", remove=FALSE)
mData$MID<-as.numeric(mData$MID)
mData$DID<-as.numeric(mData$DID)
mData$PID<-as.numeric(mData$PID)
mData$Precid<-mData$MID*100000+mData$DID*1000+mData$PID
View(mData)
## Load necessary libraries
mData[is.na(mData)] <- 0
View(mData)
PropData[is.na(PropData)] <- ""
View(PropData)
## Load necessary libraries
library(tidyr)
library(XML)
library(rvest)
library(plyr)
library(dplyr)
library(httr)
library(zoo)
library(gdata)
library(qpcR)
library(data.table)
library(stringr)
library(foreach)
library(curl)
library(purrr)
setwd("D:\\Dropbox\\My Projects\\Elections\\Geogia 2016 Parliamentary\\github\\geoelections2016")
## Scrape precinct-level Proportional results
## Get URLs for each majoritarian district
mURL<-"http://results.cec.gov.ge/proporciuli.html" # Assign master page url
url <- html_session(mURL) # Get master page
urls <- url %>% # feed `main.page` to the next step
html_nodes("a") %>% # get the CSS nodes
html_attr("href") # extract the URLs
dfURL <- data.frame(urls = urls, stringsAsFactors = FALSE)
## Subset those districts which have data
dfURL<-as.data.frame(dfURL[grep("*olq*", dfURL$urls), ])
names(dfURL)<-c("urls")
## Loop thourgh URLs and get data tables for each majoritarian district
## Create an empty data frame for pasting precinct level results
PropData <- as.data.frame(setNames(replicate(27,numeric(0), simplify = F), letters[1:27]))
for(i in 1:nrow(dfURL)) {
propRaw <- GET(paste0("http://results.cec.gov.ge/", (dfURL$urls[i]), sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
propRaw<-as.data.frame(propRaw)
PropData<-na.omit(rbind(PropData, propRaw))
}
names(PropData)<-c("PrecinctID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol")
## Construct proper IDs for precincts
PropData<-PropData %>% separate(PrecinctID, c("MID", "DID", "PID"), sep = "\\.", remove=FALSE)
PropData[is.na(PropData)] <- ""
PropData$MID<-as.numeric(PropData$MID)
PropData$DID<-as.numeric(PropData$DID)
PropData$PID<-as.numeric(PropData$PID)
PropData$Precid<-PropData$MID*100000+PropData$DID*1000+PropData$PID
names(PropData)<-c("PrecinctID", "MID", "DID", "PID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol", "PrecID")
write.csv(PropData, "PropData.csv", row.names=FALSE)
### Majoritarian districts
mData <- as.data.frame(setNames(replicate(30,numeric(0), simplify = F), letters[1:30]))
for(i in seq_along(1:73)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Protocol"
mData<-bind_rows(mData, majRaw)
}
## Remove duplicates
mData<-unique(mData)
## Subset columns with data
mData<-subset(mData,select=-c(a:NA..3))
## Reorder columns
mData<-mData[c("PrecinctID","X1","X2","X3","X4","X5","X6","X7","X8","X10","X12","X14","X15","X16","X17","X18","X19","X22","X23","X25","X26","X27","X28","X41","X42","X43","X44","Protocol")]
## Generate proper precinct codes
mData<-mData %>% separate(PrecinctID, c("MID", "DID", "PID"), sep = "\\.", remove=FALSE)
mData[is.na(mData)] <- ""
mData$MID<-as.numeric(mData$MID)
mData$DID<-as.numeric(mData$DID)
mData$PID<-as.numeric(mData$PID)
mData$Precid<-mData$MID*100000+mData$DID*1000+mData$PID
## Export to csv
write.csv(mData, "mdata.csv", row.names=FALSE)
## Load necessary libraries
library(tidyr)
library(XML)
library(rvest)
library(plyr)
library(dplyr)
library(httr)
library(zoo)
library(gdata)
library(qpcR)
library(data.table)
library(stringr)
library(foreach)
library(curl)
library(purrr)
setwd("D:\\Dropbox\\My Projects\\Elections\\Geogia 2016 Parliamentary\\github\\geoelections2016")
## Scrape precinct-level Proportional results
## Get URLs for each majoritarian district
mURL<-"http://results.cec.gov.ge/proporciuli.html" # Assign master page url
url <- html_session(mURL) # Get master page
urls <- url %>% # feed `main.page` to the next step
html_nodes("a") %>% # get the CSS nodes
html_attr("href") # extract the URLs
dfURL <- data.frame(urls = urls, stringsAsFactors = FALSE)
## Subset those districts which have data
dfURL<-as.data.frame(dfURL[grep("*olq*", dfURL$urls), ])
names(dfURL)<-c("urls")
## Loop thourgh URLs and get data tables for each majoritarian district
## Create an empty data frame for pasting precinct level results
PropData <- as.data.frame(setNames(replicate(27,numeric(0), simplify = F), letters[1:27]))
for(i in 1:nrow(dfURL)) {
propRaw <- GET(paste0("http://results.cec.gov.ge/", (dfURL$urls[i]), sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
propRaw<-as.data.frame(propRaw)
PropData<-na.omit(rbind(PropData, propRaw))
}
names(PropData)<-c("PrecinctID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol")
## Construct proper IDs for precincts
PropData<-PropData %>% separate(PrecinctID, c("MID", "DID", "PID"), sep = "\\.", remove=FALSE)
PropData[is.na(PropData)] <- ""
PropData$MID<-as.numeric(PropData$MID)
PropData$DID<-as.numeric(PropData$DID)
PropData$PID<-as.numeric(PropData$PID)
PropData$Precid<-PropData$MID*100000+PropData$DID*1000+PropData$PID
names(PropData)<-c("PrecinctID", "MID", "DID", "PID", "Party_1", "Party_2", "Party_3", "Party_4", "Party_5", "Party_6", "Party_7", "Party_8", "Party_10", "Party_11", "Party_12", "Party_14", "Party_15", "Party_16", "Party_17", "Party_18", "Party_19", "Party_22", "Party_23", "Party_25", "Party_26", "Party_27", "Party_28", "Party_30", "Party_41", "Protocol", "PrecID")
write.csv(PropData, "PropData.csv", row.names=FALSE)
### Majoritarian districts
mData <- as.data.frame(setNames(replicate(30,numeric(0), simplify = F), letters[1:30]))
for(i in seq_along(1:73)){
majRaw <- GET(paste0("http://results.cec.gov.ge/maj_", i, ".html", sep=""), user_agent("Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0")) %>%
read_html() %>%
html_nodes(xpath='//*[(@id = "table36")]')%>%
html_table(fill=TRUE, header=TRUE)
majRaw<-as.data.frame(majRaw)
colnames(majRaw)[1] <- "PrecinctID"
colnames(majRaw)[ncol(majRaw)] <- "Protocol"
mData<-bind_rows(mData, majRaw)
}
## Remove duplicates
mData<-unique(mData)
## Subset columns with data
mData<-subset(mData,select=-c(a:NA..3))
## Reorder columns
mData<-mData[c("PrecinctID","X1","X2","X3","X4","X5","X6","X7","X8","X10","X12","X14","X15","X16","X17","X18","X19","X22","X23","X25","X26","X27","X28","X41","X42","X43","X44","Protocol")]
## Generate proper precinct codes
mData<-mData %>% separate(PrecinctID, c("MID", "DID", "PID"), sep = "\\.", remove=FALSE)
mData$MID<-as.numeric(mData$MID)
mData$DID<-as.numeric(mData$DID)
mData$PID<-as.numeric(mData$PID)
mData$Precid<-mData$MID*100000+mData$DID*1000+mData$PID
mData[is.na(mData)] <- ""
## Export to csv
write.csv(mData, "mdata.csv", row.names=FALSE)
